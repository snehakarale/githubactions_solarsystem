name: Deployment â€“ Reusable Workflow

on:
  workflow_call:
    secrets:
      mongodb_password:
        required: true
    inputs:
      mongodb-uri:
        required: true
        type: string
      mongodb_username:
        required: true
        type: string
      k8s-manifest-dir:
        description: Path to Kubernetes manifests
        required: true
        default: kubernetes/
        type: string
      environment:
        description: Deployment environment name
        required: true
        default: development
        type: string
jobs:
  reuse-deploy:
      runs-on: ubuntu-latest
      environment:
        name: ${{ inputs.environment }}
        #url: ${{ steps.get-url.outputs.URL }}/live

      outputs:
        APP_URL: ${{ steps.get-url.outputs.URL }}
      steps:
        - name: Checkout repo
          uses: actions/checkout@v3

        - name: Install Minikube & dependencies
          run: |
            sudo apt-get update
            sudo apt-get install -y conntrack socat
            curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
            sudo install minikube-linux-amd64 /usr/local/bin/minikube
            curl -LO "https://dl.k8s.io/release/$(curl -Ls https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install kubectl /usr/local/bin/kubectl

        - name: Start Minikube
          run: |
            minikube start --driver=docker --memory=4g --cpus=2
            minikube status

        - name: Replace tokens in manifests
          uses: cschleiden/replace-tokens@v1
          continue-on-error: true
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: "${{ inputs.k8s-manifest-dir }}*.yaml"
          env:
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS: ${{ vars.REPLICAS }}
            IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            INGRESS_IP: 127.0.0.1

        - name: Verify replaced manifest
          run: cat ${{ inputs.k8s-manifest-dir }}*.yaml

        - name: Create MongoDB Secret
          run: |
              kubectl create namespace ${{ vars.NAMESPACE }}
              kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
                --from-literal=MONGO_URI="${{ inputs.mongodb-uri }}" \
                --from-literal=MONGO_USERNAME="${{ inputs.mongodb_username }}" \
                --from-literal=MONGO_PASSWORD="${{ secrets.mongodb_password }}" \
                --save-config \
                --dry-run=client \
                -o yaml | kubectl apply -f -

        - name: Deploy to ${{ inputs.environment }} k8s cluster
          run: |
                kubectl apply -f "${{ inputs.k8s-manifest-dir }}

        - name: Wait for Deployment to become ready
          run: |
            kubectl -n ${{ vars.NAMESPACE }} rollout status deployment/solar-system --timeout=150s

        - name: Get App URL
          id: get-url
          run: |
            URL=$(minikube service solar-system --namespace ${{ vars.NAMESPACE }} --url)
            echo "URL=$URL" >> $GITHUB_ENV

        - name: Integration Test /live 
          run: |
            echo "Testing $URL/live"
            curl --retry 5 --retry-delay 3 "$URL/live"    

        - name: Dump Kubernetes resources on failure
          if: failure()
          run: |
            kubectl -n ${{ vars.NAMESPACE }} get all
            kubectl -n ${{ vars.NAMESPACE }} describe pods
            kubectl -n ${{ vars.NAMESPACE }} logs deployment/solar-system